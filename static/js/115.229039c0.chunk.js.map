{"version":3,"file":"static/js/115.229039c0.chunk.js","mappings":"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","sources":["components/cast/Cast.styled.js","components/cast/Cast.jsx","services/ApiRequests.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  justify-content: space-around;\n  border-radius: 5px;\n  gap: 20px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  width: 300px;\n  & > img {\n    width: 300px;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieCredits, getFullPosterURL } from '../../services/ApiRequests';\n\nimport { CastList, CastItem } from './Cast.styled';\n\nexport default function Cast() {\n  const [allCast, setAllCast] = useState([]);\n  const { id } = useParams();\n  useEffect(() => {\n    getMovieCredits(id)\n      .then(data => {\n        setAllCast(data.cast);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [id]);\n  return (\n    <CastList>\n      {allCast.map(actor => {\n        const id = nanoid();\n        return (\n          <CastItem key={id}>\n            {actor.profile_path ? (\n              <img\n                src={getFullPosterURL(actor.profile_path)}\n                alt={actor.name}\n              />\n            ) : (\n              <img\n                srcSet={`${process.env.PUBLIC_URL}/no-poster.jpg`}\n                alt={actor.name}\n              />\n            )}\n            <h3>Author: {actor.name}</h3>\n            <p>Character: {actor.character}</p>\n          </CastItem>\n        );\n      })}\n    </CastList>\n  );\n}\n\nCast.propTypes = {\n  allCast: PropTypes.array,\n  getMovieCredits: PropTypes.func,\n  id: PropTypes.number,\n};\n","import axios from 'axios';\n\nconst apiKey = process.env.REACT_APP_API_KEY;\nconst API_URL = 'https://api.themoviedb.org/3';\n\nconst fetchData = async option => {\n  console.log('apiKey', apiKey);\n  try {\n    const response = await axios.get(`${API_URL}${option}api_key=${apiKey}`);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nconst getData = async option => {\n  try {\n    const data = await fetchData(option);\n    return data;\n  } catch (error) {\n    console.log(error.message);\n    throw error;\n  }\n};\n\nexport const getTrending = () => {\n  const getTrendingURL = '/trending/movie/day?';\n  return getData(getTrendingURL);\n};\n\nexport const searchMovie = movie => {\n  const searchMovieURL = `/search/movie?query=${movie}&`;\n  return getData(searchMovieURL);\n};\n\nexport const getMovieDetails = id => {\n  const getMovieDetailsURL = `/movie/${id}?`;\n  return getData(getMovieDetailsURL);\n};\n\nexport const getMovieCredits = id => {\n  const getMovieCreditsURL = `/movie/${id}/credits?`;\n  return getData(getMovieCreditsURL);\n};\n\nexport const getMovieReviews = id => {\n  const getMovieReviewsURL = `/movie/${id}/reviews?`;\n  return getData(getMovieReviewsURL);\n};\n\nexport const getFullPosterURL = posterPath => {\n  if (!posterPath) {\n    return;\n  }\n  try {\n    const response = `https://image.tmdb.org/t/p/w500${posterPath}`;\n    return response;\n  } catch (error) {\n    return error(error.message);\n  }\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastItem","_templateObject2","Cast","_useState","useState","_useState2","_slicedToArray","allCast","setAllCast","id","useParams","useEffect","getMovieCredits","then","data","cast","catch","error","console","_jsx","children","map","actor","nanoid","_jsxs","profile_path","src","getFullPosterURL","alt","name","srcSet","concat","process","character","apiKey","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","option","response","_context","prev","next","log","axios","sent","abrupt","t0","message","stop","_x","apply","arguments","getData","_ref2","_callee2","_context2","_x2","getTrending","searchMovie","movie","searchMovieURL","getMovieDetails","getMovieDetailsURL","getMovieCreditsURL","getMovieReviews","getMovieReviewsURL","posterPath","size","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}